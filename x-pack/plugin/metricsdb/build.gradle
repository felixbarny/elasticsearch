/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

apply plugin: 'elasticsearch.internal-es-plugin'
apply plugin: 'elasticsearch.internal-cluster-test'

esplugin {
  name = 'metricsdb'
  description = 'A plugin for metrics related functionality'
  classname ='org.elasticsearch.xpack.metrics.MetricsDBPlugin'
  extendedPlugins = ['x-pack-core']
}
base {
  archivesName = 'x-pack-metricsdb'
}

dependencies {
  compileOnly project(path: xpackModule('core'))
  testImplementation project(':modules:data-streams')
  testImplementation project(':x-pack:plugin:esql')
  testImplementation project(':x-pack:plugin:esql-core')
  testImplementation project(':x-pack:plugin:mapper-version')

  def otelVersion = "1.50.0"
  implementation "io.opentelemetry:opentelemetry-api:$otelVersion"
  implementation "io.opentelemetry:opentelemetry-context:$otelVersion"
  // TODO this is explicitly marked as "not for production" but it's good for now
  implementation "io.opentelemetry.proto:opentelemetry-proto:1.7.0-alpha"
  testImplementation("io.opentelemetry:opentelemetry-sdk:$otelVersion")
  testImplementation("io.opentelemetry:opentelemetry-sdk-common:$otelVersion")
  testImplementation("io.opentelemetry:opentelemetry-sdk-metrics:$otelVersion")
  testImplementation("io.opentelemetry:opentelemetry-exporter-common:$otelVersion")
  testImplementation("io.opentelemetry:opentelemetry-exporter-otlp:$otelVersion")
  testImplementation("io.opentelemetry:opentelemetry-exporter-otlp-common:$otelVersion")
  testImplementation("io.opentelemetry:opentelemetry-exporter-sender-jdk:$otelVersion")
  testImplementation("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:$otelVersion")
  testImplementation("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:$otelVersion")

  implementation "com.google.protobuf:protobuf-java:4.30.2"
  implementation 'com.dynatrace.hash4j:hash4j:0.22.0'
}

tasks.named("dependencyLicenses").configure {
  mapping from: /opentelemetry-.*/, to: 'opentelemetry'
  mapping from: /protobuf.*/, to: 'protobuf'
}
